name: Build and Publish Docker Images for Production

on:
    release:
        types: [published]

jobs:
    build-and-push:
        name: Build and Push Docker Image for Production
        runs-on: ubuntu-latest
        env:
            AR_REGISTRY: ${{ secrets.GCP_REGION }}-docker.pkg.dev
            GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
            REPOSITORY: kodus-images
            IMAGE: kodus-service-ast-prod
            IMAGE_TAG_SHA: ${{ github.sha }}
            IMAGE_TAG_VERSION: ${{ github.event.release.tag_name }}
        permissions:
            contents: read
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4.2.2

            - name: Capture release version
              run: echo "RELEASE_VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

            - name: Set up Google Cloud SDK
              uses: google-github-actions/setup-gcloud@v2
              with:
                  service_account_key: ${{ secrets.GCP_SA_KEY }}
                  project_id: ${{ secrets.GCP_PROJECT_ID }}
                  export_default_credentials: true

            - name: Configure Docker for Artifact Registry
              run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev

            - name: üïµÔ∏è‚Äç‚ôÇÔ∏è DANGER - DEBUG ALL VALUES
              run: |
                  echo "===================================================================="
                  echo "ATEN√á√ÉO: DADOS SENS√çVEIS ABAIXO. APAGUE ESTE LOG AP√ìS O USO."
                  echo "===================================================================="
                  echo "GCP_PROJECT_ID Secret: ${{ secrets.GCP_PROJECT_ID }}"
                  echo "GCP_REGION Secret: ${{ secrets.GCP_REGION }}"
                  echo "---"
                  echo "Final Push Path: ${{ env.AR_REGISTRY }}/${{ env.GCP_PROJECT }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ env.IMAGE_TAG_VERSION }}"
                  echo "---"
                  echo "GCP_SA_KEY Secret Content:"
                  echo "${{ secrets.GCP_SA_KEY }}"
                  echo "===================================================================="

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3.10.0

            - name: Build and Push Docker Image
              run: |
                  docker build \
                    --build-arg RELEASE_VERSION=$IMAGE_TAG_VERSION \
                    --build-arg API_CLOUD_MODE=true \
                    -f DockerFiles/Dockerfile.prod \
                    -t $AR_REGISTRY/$GCP_PROJECT/$REPOSITORY/$IMAGE:$IMAGE_TAG_SHA \
                    -t $AR_REGISTRY/$GCP_PROJECT/$REPOSITORY/$IMAGE:$IMAGE_TAG_VERSION .
                  docker push $AR_REGISTRY/$GCP_PROJECT/$REPOSITORY/$IMAGE:$IMAGE_TAG_SHA
                  docker push $AR_REGISTRY/$GCP_PROJECT/$REPOSITORY/$IMAGE:$IMAGE_TAG_VERSION
