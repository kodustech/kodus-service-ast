FROM --platform=linux/amd64 node:22.14.0-slim AS deps

ARG RELEASE_VERSION
WORKDIR /usr/src/app

RUN apt-get update && \
    apt-get install -y ca-certificates git python3 make g++ pkg-config && \
    rm -rf /var/lib/apt/lists/* && \
    yarn global add clinic

# Configurar opções otimizadas para Node.js e processamento de ASTs
ENV NODE_OPTIONS="--max-old-space-size=4096"

COPY package.json yarn.lock ./

# Instalar dependências com cache otimizado
RUN yarn install --frozen-lockfile --network-timeout 600000

FROM --platform=linux/amd64 deps AS build
WORKDIR /usr/src/app

COPY . .

# Build otimizado
RUN yarn build

FROM --platform=linux/amd64 node:22.14.0-slim AS production
WORKDIR /usr/src/app

# Expor portas para o serviço gRPC e health check
EXPOSE 3002
EXPOSE 5001

# Instalar apenas o essencial para produção
RUN apt-get update && \
    apt-get install -y ca-certificates && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /app/logs/kodus-service-ast

# Configurau00e7u00e3o otimizada para produção
ENV NODE_ENV="production"
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Criar diretório para certificados
RUN mkdir -p /usr/src/app/certs

# Copiar apenas arquivos necessários
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/dist ./dist
COPY ecosystem.config.js ./
COPY package.json yarn.lock ./

RUN yarn global add pm2
RUN pm2 install pm2-logrotate
RUN pm2 set pm2-logrotate:max_size 30M
RUN pm2 set pm2-logrotate:retain 10

CMD ["pm2-runtime", "start", "ecosystem.config.js", "--env", "production"]
