services:
    kodus-service-ast-api:
        image: kodus/service-ast:latest
        container_name: ${CONTAINER_NAME}
        build:
            context: .
            dockerfile: DockerFiles/Dockerfile.dev
        ports:
            - ${API_PORT}:${API_PORT}
            - 9231:9231 # debug API
        env_file:
            - .env
        restart: unless-stopped
        volumes:
            - ./src:/usr/src/app/src
            - ./package.json:/usr/src/app/package.json
            - ./tsconfig.json:/usr/src/app/tsconfig.json
            - ./nest-cli.json:/usr/src/app/nest-cli.json
            - ./.swcrc:/usr/src/app/.swcrc
            - /usr/src/app/node_modules
            - ./tmp:/shared/tmp/cloned-repos
        environment:
            - CHOKIDAR_USEPOLLING=true
            - TZ=UTC
        networks:
            - kodus-backend-services
            - shared-network
        # ðŸš€ LIMITES DE RECURSOS - API (Leve)
        deploy:
            resources:
                limits:
                    cpus: '2.0'      # 1 CPU core
                    memory: 2G       # 1GB RAM
                reservations:
                    cpus: '0.75'      # MÃ­nimo 0.5 CPU
                    memory: 1G     # MÃ­nimo 512MB

    kodus-service-ast-worker:
        image: kodus/service-ast:latest
        container_name: ${CONTAINER_NAME}-worker
        build:
            context: .
            dockerfile: DockerFiles/Dockerfile.dev
        command: ["yarn", "start:worker:dev"]
        ports:
            - 9230:9230 # worker debug
        env_file:
            - .env
        restart: unless-stopped
        volumes:
            - ./src:/usr/src/app/src
            - ./package.json:/usr/src/app/package.json
            - ./tsconfig.json:/usr/src/app/tsconfig.json
            - ./nest-cli.json:/usr/src/app/nest-cli.json
            - ./.swcrc:/usr/src/app/.swcrc
            - /usr/src/app/node_modules
            - ./tmp:/shared/tmp/cloned-repos
        environment:
            - CHOKIDAR_USEPOLLING=true
            - TZ=UTC
        networks:
            - kodus-backend-services
            - shared-network
        depends_on:
            - kodus-service-ast-api
        # ðŸš€ LIMITES DE RECURSOS - WORKER (Pesado)
        deploy:
            resources:
                limits:
                    cpus: '3.0'      # 2 CPU cores
                    memory: 3G       # 2GB RAM
                reservations:
                    cpus: '1.0'      # MÃ­nimo 1 CPU
                    memory: 1G       # MÃ­nimo 1GB

networks:
    kodus-backend-services:
        external: true
    shared-network:
        external: true

# volumes:
#     shared-tmp:
